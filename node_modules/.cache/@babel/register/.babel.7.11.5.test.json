{
  "{\"sourceRoot\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler\",\"filename\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/wdio.conf.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler",
      "filename": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/wdio.conf.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/wdio.conf.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/wdio.conf.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/",
        "sourceFileName": "wdio.conf.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst utilities = require(\"./support/utils/Utilities\");\n\nconst chai = require('chai');\n\nconst allure = require('@wdio/allure-reporter').default;\n\nrequire('dotenv').config(); // Max time for single test case execution\n\n\nconst mochaTimeout = process.env.DEBUG ? 99999999 : 120000;\nconst elementTimeout = 10000;\nconst baseURL = process.env.BASE_URL || 'http://uitestingplayground.com';\nexports.config = {\n  // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n  // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n  // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n  // gets prepended directly.\n  baseUrl: baseURL,\n  //\n  // ====================\n  // Runner Configuration\n  // ====================\n  //\n  // WebdriverIO allows it to run your tests in arbitrary locations (e.g. locally or\n  // on a remote machine).\n  runner: 'local',\n  //\n  // ==================\n  // Specify Test Files\n  // ==================\n  // Define which test specs should run. The pattern is relative to the directory\n  // from which `wdio` was called. Notice that, if you are calling `wdio` from an\n  // NPM script (see https://docs.npmjs.com/cli/run-script) then the current working\n  // directory is where your package.json resides, so `wdio` will be called from there.\n  //\n  specs: ['./test/**/*.spec.js'],\n  // Patterns to exclude.\n  exclude: ['.test/**/*.page.js'],\n  //\n  // ============\n  // Capabilities\n  // ============\n  // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n  // time. Depending on the number of capabilities, WebdriverIO launches several test\n  // sessions. Within your capabilities you can overwrite the spec and exclude options in\n  // order to group specific specs to a specific capability.\n  //\n  // First, you can define how many instances should be started at the same time. Let's\n  // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n  // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n  // files and you set maxInstances to 10, all spec files will get tested at the same time\n  // and 30 processes will get spawned. The property handles how many capabilities\n  // from the same test should run tests.\n  //\n  maxInstances: 10,\n  //\n  // If you have trouble getting all important capabilities together, check out the\n  // Sauce Labs platform configurator - a great tool to configure your capabilities:\n  // https://docs.saucelabs.com/reference/platforms-configurator\n  //\n  capabilities: [{\n    // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n    // grid with only 5 firefox instances available you can make sure that not more than\n    // 5 instances get started at a time.\n    maxInstances: 3,\n    //\n    browserName: 'chrome',\n    'goog:chromeOptions': {\n      args: ['--disable-infobars', '--window-size=1920,1440']\n    } // If outputDir is provided WebdriverIO can capture driver session logs\n    // it is possible to configure which logTypes to include/exclude.\n    // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n    // excludeDriverLogs: ['bugreport', 'server'],\n\n  }],\n  //\n  // ===================\n  // Test Configurations\n  // ===================\n  // Define all options that are relevant for the WebdriverIO instance here\n  //\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  logLevel: process.env.DEBUG ? 'info' : 'warn',\n  //\n  // Set specific log levels per logger\n  // loggers:\n  // - webdriver, webdriverio\n  // - @wdio/applitools-service, @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n  // - @wdio/mocha-framework, @wdio/jasmine-framework\n  // - @wdio/local-runner, @wdio/lambda-runner\n  // - @wdio/sumologic-reporter\n  // - @wdio/cli, @wdio/config, @wdio/sync, @wdio/utils\n  // Level of logging verbosity: trace | debug | info | warn | error | silent\n  // logLevels: {\n  //     webdriver: 'info',\n  //     '@wdio/applitools-service': 'info'\n  // },\n  //\n  // If you only want to run your tests until a specific amount of tests have failed use\n  // bail (default is 0 - don't bail, run all tests).\n  bail: 0,\n  //\n  // Default timeout for all waitFor* commands.\n  waitforTimeout: elementTimeout,\n  //\n  // Default timeout in milliseconds for request\n  // if browser driver or grid doesn't send response\n  connectionRetryTimeout: 90000,\n  //\n  // Default request retries count\n  connectionRetryCount: 3,\n  //\n  // Test runner services\n  // Services take over a specific job you don't want to take care of. They enhance\n  // your test setup with almost no effort. Unlike plugins, they don't add new\n  // commands. Instead, they hook themselves up into the test process.\n  services: ['chromedriver' // ['selenium-standalone', {\n  //     logPath: 'logs',\n  //     installArgs: {\n  //         drivers: {\n  //             chrome: { version: '79.0.3945.88' },\n  //             firefox: { version: '0.26.0' }\n  //         }\n  //     },\n  //     args: {\n  //         drivers: {\n  //             chrome: { version: '79.0.3945.88' },\n  //             firefox: { version: '0.26.0' }\n  //         }\n  //     },\n  // }]\n  ],\n  // Framework you want to run your specs with.\n  // The following are supported: Mocha, Jasmine, and Cucumber\n  // see also: https://webdriver.io/docs/frameworks.html\n  //\n  // Make sure you have the wdio adapter package for the specific framework installed\n  // before running any tests.\n  framework: 'mocha',\n  //\n  // The number of times to retry the entire specfile when it fails as a whole\n  // specFileRetries: 1,\n  //\n  // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n  // specFileRetriesDeferred: false,\n  //\n  // Test reporter for stdout.\n  // The only one supported by default is 'dot'\n  // see also: https://webdriver.io/docs/dot-reporter.html\n  reporters: ['spec', ['allure', {\n    outputDir: 'report/allure-results',\n    disableWebdriverStepsReporting: true,\n    disableWebdriverScreenshotsReporting: false\n  }], ['junit', {\n    outputDir: 'report/junit',\n    outputFileFormat: function (options) {\n      // optional\n      return `test-${options.cid}-results.xml`;\n    }\n  }], ['json', {\n    outputDir: './report/json'\n  }]],\n  //\n  // Options to be passed to Mocha.\n  // See the full list at http://mochajs.org/\n  mochaOpts: {\n    ui: 'bdd',\n    timeout: mochaTimeout,\n    require: []\n  },\n  //\n  // =====\n  // Hooks\n  // =====\n  // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n  // it and to build services around it. You can either apply a single function or an array of\n  // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n  // resolved to continue.\n\n  /**\n   * Gets executed once before all workers get launched.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   */\n  // onPrepare: function (config, capabilities) {\n  // },\n\n  /**\n   * Gets executed before a worker process is spawned and can be used to initialise specific service\n   * for that worker as well as modify runtime environments in an async fashion.\n   * @param  {String} cid      capability id (e.g 0-0)\n   * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n   * @param  {[type]} specs    specs to be run in the worker process\n   * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n   * @param  {[type]} execArgv list of string arguments passed to the worker process\n   */\n  // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n  // },\n\n  /**\n   * Gets executed just before initialising the webdriver session and test framework. It allows you\n   * to manipulate configurations depending on the capability or spec.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   */\n  // beforeSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed before test execution begins. At this point you can access to all global\n   * variables like `browser`. It is the perfect place to define custom commands.\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that are to be run\n   */\n  before: function (capabilities, specs) {\n    global.allure = allure;\n    global.chai = chai;\n    global.utilities = utilities;\n  },\n\n  /**\n   * Runs before a WebdriverIO command gets executed.\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   */\n  // beforeCommand: function (commandName, args) {\n  // },\n\n  /**\n   * Hook that gets executed before the suite starts\n   * @param {Object} suite suite details\n   */\n  beforeSuite: function (suite) {\n    allure.addFeature(suite.name);\n  },\n\n  /**\n   * Function to be executed before a test (in Mocha/Jasmine) starts.\n   */\n  beforeTest: function (test, context) {\n    allure.addEnvironment(\"BROWSER\", browser.capabilities.browserName);\n    allure.addEnvironment(\"BROWSER_VERSION\", browser.capabilities.version);\n    allure.addEnvironment(\"PLATFORM\", browser.capabilities.platform);\n  },\n\n  /**\n   * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n   * beforeEach in Mocha)\n   */\n  // beforeHook: function (test, context) {\n  // },\n\n  /**\n   * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n   * afterEach in Mocha)\n   */\n  // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n  // },\n\n  /**\n   * Function to be executed after a test (in Mocha/Jasmine).\n   */\n  afterTest: function (test, context, {\n    error,\n    result,\n    duration,\n    passed,\n    retries\n  }) {\n    if (error !== undefined) {\n      try {\n        //TODO: Fix allure reporting on failure\n        utilities.takeScreenshot(test.title, true);\n      } catch {\n        console.log('>> Capture Screenshot Failed!');\n      }\n    }\n  },\n\n  /**\n   * Hook that gets executed after the suite has ended\n   * @param {Object} suite suite details\n   */\n  // afterSuite: function (suite) {\n  // },\n\n  /**\n   * Runs after a WebdriverIO command gets executed\n   * @param {String} commandName hook command name\n   * @param {Array} args arguments that command would receive\n   * @param {Number} result 0 - command success, 1 - command error\n   * @param {Object} error error object if any\n   */\n  // afterCommand: function (commandName, args, result, error) {\n  // },\n\n  /**\n   * Gets executed after all tests are done. You still have access to all global variables from\n   * the test.\n   * @param {Number} result 0 - test pass, 1 - test fail\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // after: function (result, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed right after terminating the webdriver session.\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {Array.<String>} specs List of spec file paths that ran\n   */\n  // afterSession: function (config, capabilities, specs) {\n  // },\n\n  /**\n   * Gets executed after all workers got shut down and the process is about to exit. An error\n   * thrown in the onComplete hook will result in the test run failing.\n   * @param {Object} exitCode 0 - success, 1 - fail\n   * @param {Object} config wdio configuration object\n   * @param {Array.<Object>} capabilities list of capabilities details\n   * @param {<Object>} results object containing test results\n   */\n  onComplete: function (exitCode, config, capabilities, results) {\n    const mergeResults = require('wdio-json-reporter/mergeResults');\n\n    mergeResults('./report/json', 'wdio-*', 'testResults.json');\n  }\n  /**\n  * Gets executed when a refresh happens.\n  * @param {String} oldSessionId session ID of the old session\n  * @param {String} newSessionId session ID of the new session\n  */\n  //onReload: function(oldSessionId, newSessionId) {\n  //}\n\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "wdio.conf.js"
      ],
      "names": [
        "utilities",
        "require",
        "chai",
        "allure",
        "default",
        "config",
        "mochaTimeout",
        "process",
        "env",
        "DEBUG",
        "elementTimeout",
        "baseURL",
        "BASE_URL",
        "exports",
        "baseUrl",
        "runner",
        "specs",
        "exclude",
        "maxInstances",
        "capabilities",
        "browserName",
        "args",
        "logLevel",
        "bail",
        "waitforTimeout",
        "connectionRetryTimeout",
        "connectionRetryCount",
        "services",
        "framework",
        "reporters",
        "outputDir",
        "disableWebdriverStepsReporting",
        "disableWebdriverScreenshotsReporting",
        "outputFileFormat",
        "options",
        "cid",
        "mochaOpts",
        "ui",
        "timeout",
        "before",
        "global",
        "beforeSuite",
        "suite",
        "addFeature",
        "name",
        "beforeTest",
        "test",
        "context",
        "addEnvironment",
        "browser",
        "version",
        "platform",
        "afterTest",
        "error",
        "result",
        "duration",
        "passed",
        "retries",
        "undefined",
        "takeScreenshot",
        "title",
        "console",
        "log",
        "onComplete",
        "exitCode",
        "results",
        "mergeResults"
      ],
      "mappings": "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",
      "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/",
      "sourcesContent": [
        "const utilities= require(\"./support/utils/Utilities\");\nconst chai = require('chai');\nconst allure = require('@wdio/allure-reporter').default;\nrequire('dotenv').config();\n\n// Max time for single test case execution\nconst mochaTimeout = process.env.DEBUG ? 99999999 : 120000;\nconst elementTimeout = 10000;\nconst baseURL = process.env.BASE_URL || 'http://uitestingplayground.com';\n\n\nexports.config = {\n    // Set a base URL in order to shorten url command calls. If your `url` parameter starts\n    // with `/`, the base url gets prepended, not including the path portion of your baseUrl.\n    // If your `url` parameter starts without a scheme or `/` (like `some/path`), the base url\n    // gets prepended directly.\n    baseUrl: baseURL,\n    //\n    // ====================\n    // Runner Configuration\n    // ====================\n    //\n    // WebdriverIO allows it to run your tests in arbitrary locations (e.g. locally or\n    // on a remote machine).\n    runner: 'local',\n    //\n    // ==================\n    // Specify Test Files\n    // ==================\n    // Define which test specs should run. The pattern is relative to the directory\n    // from which `wdio` was called. Notice that, if you are calling `wdio` from an\n    // NPM script (see https://docs.npmjs.com/cli/run-script) then the current working\n    // directory is where your package.json resides, so `wdio` will be called from there.\n    //\n    specs: [\n        './test/**/*.spec.js'\n    ],\n    // Patterns to exclude.\n    exclude: [\n        '.test/**/*.page.js'\n    ],\n    //\n    // ============\n    // Capabilities\n    // ============\n    // Define your capabilities here. WebdriverIO can run multiple capabilities at the same\n    // time. Depending on the number of capabilities, WebdriverIO launches several test\n    // sessions. Within your capabilities you can overwrite the spec and exclude options in\n    // order to group specific specs to a specific capability.\n    //\n    // First, you can define how many instances should be started at the same time. Let's\n    // say you have 3 different capabilities (Chrome, Firefox, and Safari) and you have\n    // set maxInstances to 1; wdio will spawn 3 processes. Therefore, if you have 10 spec\n    // files and you set maxInstances to 10, all spec files will get tested at the same time\n    // and 30 processes will get spawned. The property handles how many capabilities\n    // from the same test should run tests.\n    //\n    maxInstances: 10,\n    //\n    // If you have trouble getting all important capabilities together, check out the\n    // Sauce Labs platform configurator - a great tool to configure your capabilities:\n    // https://docs.saucelabs.com/reference/platforms-configurator\n    //\n    capabilities: [{\n\n        // maxInstances can get overwritten per capability. So if you have an in-house Selenium\n        // grid with only 5 firefox instances available you can make sure that not more than\n        // 5 instances get started at a time.\n        maxInstances: 3,\n        //\n        browserName: 'chrome',\n        'goog:chromeOptions': {\n            args: ['--disable-infobars', '--window-size=1920,1440'],\n        }\n        // If outputDir is provided WebdriverIO can capture driver session logs\n        // it is possible to configure which logTypes to include/exclude.\n        // excludeDriverLogs: ['*'], // pass '*' to exclude all driver session logs\n        // excludeDriverLogs: ['bugreport', 'server'],\n    }],\n    //\n    // ===================\n    // Test Configurations\n    // ===================\n    // Define all options that are relevant for the WebdriverIO instance here\n    //\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    logLevel: process.env.DEBUG ? 'info' : 'warn',\n    //\n    // Set specific log levels per logger\n    // loggers:\n    // - webdriver, webdriverio\n    // - @wdio/applitools-service, @wdio/browserstack-service, @wdio/devtools-service, @wdio/sauce-service\n    // - @wdio/mocha-framework, @wdio/jasmine-framework\n    // - @wdio/local-runner, @wdio/lambda-runner\n    // - @wdio/sumologic-reporter\n    // - @wdio/cli, @wdio/config, @wdio/sync, @wdio/utils\n    // Level of logging verbosity: trace | debug | info | warn | error | silent\n    // logLevels: {\n    //     webdriver: 'info',\n    //     '@wdio/applitools-service': 'info'\n    // },\n    //\n    // If you only want to run your tests until a specific amount of tests have failed use\n    // bail (default is 0 - don't bail, run all tests).\n    bail: 0,\n    //\n    // Default timeout for all waitFor* commands.\n    waitforTimeout: elementTimeout,\n    //\n    // Default timeout in milliseconds for request\n    // if browser driver or grid doesn't send response\n    connectionRetryTimeout: 90000,\n    //\n    // Default request retries count\n    connectionRetryCount: 3,\n    //\n    // Test runner services\n    // Services take over a specific job you don't want to take care of. They enhance\n    // your test setup with almost no effort. Unlike plugins, they don't add new\n    // commands. Instead, they hook themselves up into the test process.\n    services: ['chromedriver',\n        // ['selenium-standalone', {\n        //     logPath: 'logs',\n        //     installArgs: {\n        //         drivers: {\n        //             chrome: { version: '79.0.3945.88' },\n        //             firefox: { version: '0.26.0' }\n        //         }\n        //     },\n        //     args: {\n        //         drivers: {\n        //             chrome: { version: '79.0.3945.88' },\n        //             firefox: { version: '0.26.0' }\n        //         }\n        //     },\n        // }]\n    ],\n\n    // Framework you want to run your specs with.\n    // The following are supported: Mocha, Jasmine, and Cucumber\n    // see also: https://webdriver.io/docs/frameworks.html\n    //\n    // Make sure you have the wdio adapter package for the specific framework installed\n    // before running any tests.\n    framework: 'mocha',\n    //\n    // The number of times to retry the entire specfile when it fails as a whole\n    // specFileRetries: 1,\n    //\n    // Whether or not retried specfiles should be retried immediately or deferred to the end of the queue\n    // specFileRetriesDeferred: false,\n    //\n    // Test reporter for stdout.\n    // The only one supported by default is 'dot'\n    // see also: https://webdriver.io/docs/dot-reporter.html\n    reporters: [\n      'spec',\n      ['allure', {\n        outputDir: 'report/allure-results',\n        disableWebdriverStepsReporting: true,\n        disableWebdriverScreenshotsReporting: false,\n      }],\n      ['junit', {\n        outputDir: 'report/junit',\n        outputFileFormat: function(options) { // optional\n          return `test-${options.cid}-results.xml`\n        }\n      }],\n        ['json',{\n            outputDir: './report/json'\n        }]\n    ],\n\n    //\n    // Options to be passed to Mocha.\n    // See the full list at http://mochajs.org/\n    mochaOpts: {\n        ui: 'bdd',\n        timeout: mochaTimeout,\n        require: []\n    },\n    //\n    // =====\n    // Hooks\n    // =====\n    // WebdriverIO provides several hooks you can use to interfere with the test process in order to enhance\n    // it and to build services around it. You can either apply a single function or an array of\n    // methods to it. If one of them returns with a promise, WebdriverIO will wait until that promise got\n    // resolved to continue.\n    /**\n     * Gets executed once before all workers get launched.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     */\n    // onPrepare: function (config, capabilities) {\n    // },\n    /**\n     * Gets executed before a worker process is spawned and can be used to initialise specific service\n     * for that worker as well as modify runtime environments in an async fashion.\n     * @param  {String} cid      capability id (e.g 0-0)\n     * @param  {[type]} caps     object containing capabilities for session that will be spawn in the worker\n     * @param  {[type]} specs    specs to be run in the worker process\n     * @param  {[type]} args     object that will be merged with the main configuration once worker is initialised\n     * @param  {[type]} execArgv list of string arguments passed to the worker process\n     */\n    // onWorkerStart: function (cid, caps, specs, args, execArgv) {\n    // },\n    /**\n     * Gets executed just before initialising the webdriver session and test framework. It allows you\n     * to manipulate configurations depending on the capability or spec.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     */\n    // beforeSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed before test execution begins. At this point you can access to all global\n     * variables like `browser`. It is the perfect place to define custom commands.\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that are to be run\n     */\n    before: function (capabilities, specs) {\n        global.allure = allure;\n        global.chai = chai;\n        global.utilities = utilities;\n    },\n    /**\n     * Runs before a WebdriverIO command gets executed.\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     */\n    // beforeCommand: function (commandName, args) {\n    // },\n    /**\n     * Hook that gets executed before the suite starts\n     * @param {Object} suite suite details\n     */\n    beforeSuite: function (suite) {\n        allure.addFeature(suite.name);\n    },\n    /**\n     * Function to be executed before a test (in Mocha/Jasmine) starts.\n     */\n    beforeTest: function (test, context) {\n        allure.addEnvironment(\"BROWSER\", browser.capabilities.browserName);\n        allure.addEnvironment(\"BROWSER_VERSION\", browser.capabilities.version);\n        allure.addEnvironment(\"PLATFORM\", browser.capabilities.platform);\n\n    },\n    /**\n     * Hook that gets executed _before_ a hook within the suite starts (e.g. runs before calling\n     * beforeEach in Mocha)\n     */\n    // beforeHook: function (test, context) {\n    // },\n    /**\n     * Hook that gets executed _after_ a hook within the suite starts (e.g. runs after calling\n     * afterEach in Mocha)\n     */\n    // afterHook: function (test, context, { error, result, duration, passed, retries }) {\n    // },\n    /**\n     * Function to be executed after a test (in Mocha/Jasmine).\n     */\n    afterTest: function(test, context, { error, result, duration, passed, retries }) {\n        if (error !== undefined) {\n            try {\n                //TODO: Fix allure reporting on failure\n                utilities.takeScreenshot(test.title, true)\n            } catch {\n                console.log('>> Capture Screenshot Failed!');\n            }\n        }\n    },\n    /**\n     * Hook that gets executed after the suite has ended\n     * @param {Object} suite suite details\n     */\n    // afterSuite: function (suite) {\n    // },\n    /**\n     * Runs after a WebdriverIO command gets executed\n     * @param {String} commandName hook command name\n     * @param {Array} args arguments that command would receive\n     * @param {Number} result 0 - command success, 1 - command error\n     * @param {Object} error error object if any\n     */\n    // afterCommand: function (commandName, args, result, error) {\n    // },\n    /**\n     * Gets executed after all tests are done. You still have access to all global variables from\n     * the test.\n     * @param {Number} result 0 - test pass, 1 - test fail\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // after: function (result, capabilities, specs) {\n    // },\n    /**\n     * Gets executed right after terminating the webdriver session.\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {Array.<String>} specs List of spec file paths that ran\n     */\n    // afterSession: function (config, capabilities, specs) {\n    // },\n    /**\n     * Gets executed after all workers got shut down and the process is about to exit. An error\n     * thrown in the onComplete hook will result in the test run failing.\n     * @param {Object} exitCode 0 - success, 1 - fail\n     * @param {Object} config wdio configuration object\n     * @param {Array.<Object>} capabilities list of capabilities details\n     * @param {<Object>} results object containing test results\n     */\n    onComplete: function(exitCode, config, capabilities, results) {\n        const mergeResults = require('wdio-json-reporter/mergeResults');\n        mergeResults('./report/json', 'wdio-*', 'testResults.json')\n    },\n    /**\n    * Gets executed when a refresh happens.\n    * @param {String} oldSessionId session ID of the old session\n    * @param {String} newSessionId session ID of the new session\n    */\n    //onReload: function(oldSessionId, newSessionId) {\n    //}\n}\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620897664310
  },
  "{\"sourceRoot\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler\",\"filename\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler",
      "filename": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/",
        "sourceFileName": "Utilities.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst fs = require('fs');\n\nconst moment = require('moment');\n\nclass Utilities {\n  static getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  static takeScreenshot(name, failure = false) {\n    if (!name) name = moment().format('YYYY-MM-DDTH:mm:ss');\n    const path = './report/screenshot/';\n\n    if (!fs.existsSync(path)) {\n      fs.mkdirSync(path, {\n        recursive: true\n      });\n    }\n\n    if (failure) {\n      name = name + '_fail';\n    }\n\n    name = name.replace(/ /g, '_') + '.png';\n    browser.saveScreenshot(path + name);\n    const data = fs.readFileSync(`${path}/${name}`);\n    allure.addAttachment(name, data, 'image/png');\n  }\n\n}\n\nmodule.exports = Utilities;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlV0aWxpdGllcy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb21lbnQiLCJVdGlsaXRpZXMiLCJnZXRSYW5kb21JbnQiLCJtYXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ0YWtlU2NyZWVuc2hvdCIsIm5hbWUiLCJmYWlsdXJlIiwiZm9ybWF0IiwicGF0aCIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJyZWN1cnNpdmUiLCJyZXBsYWNlIiwiYnJvd3NlciIsInNhdmVTY3JlZW5zaG90IiwiZGF0YSIsInJlYWRGaWxlU3luYyIsImFsbHVyZSIsImFkZEF0dGFjaG1lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFFQSxNQUFNRSxTQUFOLENBQWdCO0FBQ2QsU0FBT0MsWUFBUCxDQUFvQkMsR0FBcEIsRUFBeUI7QUFDdkIsV0FBT0MsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFnQkYsSUFBSSxDQUFDQyxLQUFMLENBQVdGLEdBQVgsQ0FBM0IsQ0FBUDtBQUNEOztBQUVELFNBQU9JLGNBQVAsQ0FBc0JDLElBQXRCLEVBQTRCQyxPQUFPLEdBQUMsS0FBcEMsRUFBMkM7QUFDekMsUUFBSSxDQUFDRCxJQUFMLEVBQVdBLElBQUksR0FBR1IsTUFBTSxHQUFHVSxNQUFULENBQWdCLG9CQUFoQixDQUFQO0FBQ1gsVUFBTUMsSUFBSSxHQUFHLHNCQUFiOztBQUNBLFFBQUksQ0FBQ2IsRUFBRSxDQUFDYyxVQUFILENBQWNELElBQWQsQ0FBTCxFQUEwQjtBQUN4QmIsTUFBQUEsRUFBRSxDQUFDZSxTQUFILENBQWFGLElBQWIsRUFBbUI7QUFBRUcsUUFBQUEsU0FBUyxFQUFFO0FBQWIsT0FBbkI7QUFDRDs7QUFFRCxRQUFJTCxPQUFKLEVBQWE7QUFDWEQsTUFBQUEsSUFBSSxHQUFHQSxJQUFJLEdBQUcsT0FBZDtBQUNEOztBQUNEQSxJQUFBQSxJQUFJLEdBQUdBLElBQUksQ0FBQ08sT0FBTCxDQUFhLElBQWIsRUFBbUIsR0FBbkIsSUFBMEIsTUFBakM7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxjQUFSLENBQXdCTixJQUFJLEdBQUdILElBQS9CO0FBQ0EsVUFBTVUsSUFBSSxHQUFHcEIsRUFBRSxDQUFDcUIsWUFBSCxDQUFpQixHQUFFUixJQUFLLElBQUdILElBQUssRUFBaEMsQ0FBYjtBQUNBWSxJQUFBQSxNQUFNLENBQUNDLGFBQVAsQ0FBcUJiLElBQXJCLEVBQTJCVSxJQUEzQixFQUFpQyxXQUFqQztBQUNEOztBQW5CYTs7QUFzQmhCSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QixTQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbXlraGFpbG8ua3JpdWNoZWsvRG9jdW1lbnRzL1Byb2plY3QvbGVybmluZ1Byb2ovd2ViZHJpdmVyaW8tbW9jaGEtdWlhdXRvbWF0aW9uLWJvaWxlci9zdXBwb3J0L3V0aWxzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpO1xuXG5jbGFzcyBVdGlsaXRpZXMge1xuICBzdGF0aWMgZ2V0UmFuZG9tSW50KG1heCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBNYXRoLmZsb29yKG1heCkpO1xuICB9XG5cbiAgc3RhdGljIHRha2VTY3JlZW5zaG90KG5hbWUsIGZhaWx1cmU9ZmFsc2UpIHtcbiAgICBpZiAoIW5hbWUpIG5hbWUgPSBtb21lbnQoKS5mb3JtYXQoJ1lZWVktTU0tRERUSDptbTpzcycpO1xuICAgIGNvbnN0IHBhdGggPSAnLi9yZXBvcnQvc2NyZWVuc2hvdC8nO1xuICAgIGlmICghZnMuZXhpc3RzU3luYyhwYXRoKSkge1xuICAgICAgZnMubWtkaXJTeW5jKHBhdGgsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xuICAgIH1cblxuICAgIGlmIChmYWlsdXJlKSB7XG4gICAgICBuYW1lID0gbmFtZSArICdfZmFpbCc7XG4gICAgfVxuICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoLyAvZywgJ18nKSArICcucG5nJztcbiAgICBicm93c2VyLnNhdmVTY3JlZW5zaG90KCBwYXRoICsgbmFtZSk7XG4gICAgY29uc3QgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhgJHtwYXRofS8ke25hbWV9YCk7XG4gICAgYWxsdXJlLmFkZEF0dGFjaG1lbnQobmFtZSwgZGF0YSwgJ2ltYWdlL3BuZycpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVXRpbGl0aWVzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Utilities.js"
      ],
      "names": [
        "fs",
        "require",
        "moment",
        "Utilities",
        "getRandomInt",
        "max",
        "Math",
        "floor",
        "random",
        "takeScreenshot",
        "name",
        "failure",
        "format",
        "path",
        "existsSync",
        "mkdirSync",
        "recursive",
        "replace",
        "browser",
        "saveScreenshot",
        "data",
        "readFileSync",
        "allure",
        "addAttachment",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,SAAN,CAAgB;AACd,SAAOC,YAAP,CAAoBC,GAApB,EAAyB;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,SAAOI,cAAP,CAAsBC,IAAtB,EAA4BC,OAAO,GAAC,KAApC,EAA2C;AACzC,QAAI,CAACD,IAAL,EAAWA,IAAI,GAAGR,MAAM,GAAGU,MAAT,CAAgB,oBAAhB,CAAP;AACX,UAAMC,IAAI,GAAG,sBAAb;;AACA,QAAI,CAACb,EAAE,CAACc,UAAH,CAAcD,IAAd,CAAL,EAA0B;AACxBb,MAAAA,EAAE,CAACe,SAAH,CAAaF,IAAb,EAAmB;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAnB;AACD;;AAED,QAAIL,OAAJ,EAAa;AACXD,MAAAA,IAAI,GAAGA,IAAI,GAAG,OAAd;AACD;;AACDA,IAAAA,IAAI,GAAGA,IAAI,CAACO,OAAL,CAAa,IAAb,EAAmB,GAAnB,IAA0B,MAAjC;AACAC,IAAAA,OAAO,CAACC,cAAR,CAAwBN,IAAI,GAAGH,IAA/B;AACA,UAAMU,IAAI,GAAGpB,EAAE,CAACqB,YAAH,CAAiB,GAAER,IAAK,IAAGH,IAAK,EAAhC,CAAb;AACAY,IAAAA,MAAM,CAACC,aAAP,CAAqBb,IAArB,EAA2BU,IAA3B,EAAiC,WAAjC;AACD;;AAnBa;;AAsBhBI,MAAM,CAACC,OAAP,GAAiBtB,SAAjB",
      "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/",
      "sourcesContent": [
        "const fs = require('fs');\nconst moment = require('moment');\n\nclass Utilities {\n  static getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  static takeScreenshot(name, failure=false) {\n    if (!name) name = moment().format('YYYY-MM-DDTH:mm:ss');\n    const path = './report/screenshot/';\n    if (!fs.existsSync(path)) {\n      fs.mkdirSync(path, { recursive: true });\n    }\n\n    if (failure) {\n      name = name + '_fail';\n    }\n    name = name.replace(/ /g, '_') + '.png';\n    browser.saveScreenshot( path + name);\n    const data = fs.readFileSync(`${path}/${name}`);\n    allure.addAttachment(name, data, 'image/png');\n  }\n}\n\nmodule.exports = Utilities;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620895041601
  },
  "{\"sourceRoot\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler\",\"filename\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler\",\"plugins\":[{\"key\":\"proposal-class-properties\",\"visitor\":{\"PrivateName\":{\"enter\":[null]},\"ExportDefaultDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]}},\"options\":{}},{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-nullish-coalescing-operator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-chaining\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5:test": {
    "metadata": {},
    "options": {
      "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler",
      "filename": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "test",
      "root": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-class-properties",
          "visitor": {
            "PrivateName": {
              "enter": [
                null
              ]
            },
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {}
        },
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-nullish-coalescing-operator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-chaining",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js",
        "plugins": [
          "classProperties",
          "classPrivateProperties",
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "dynamicImport",
          "exportNamespaceFrom"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/Utilities.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/",
        "sourceFileName": "Utilities.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconst fs = require('fs');\n\nconst moment = require('moment');\n\nclass Utilities {\n  static getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  static takeScreenshot(name, failure = false) {\n    if (!name) name = moment().format('YYYY-MM-DDTH:mm:ss');\n    const path = './report/screenshot/';\n\n    if (!fs.existsSync(path)) {\n      fs.mkdirSync(path, {\n        recursive: true\n      });\n    }\n\n    if (failure) {\n      name = name + '_fail';\n    }\n\n    name = name.replace(/ /g, '_') + '.png';\n    browser.saveScreenshot(path + name);\n    const data = fs.readFileSync(`${path}/${name}`);\n    allure.addAttachment(name, data, 'image/png');\n  }\n\n}\n\nmodule.exports = Utilities;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIlV0aWxpdGllcy5qcyJdLCJuYW1lcyI6WyJmcyIsInJlcXVpcmUiLCJtb21lbnQiLCJVdGlsaXRpZXMiLCJnZXRSYW5kb21JbnQiLCJtYXgiLCJNYXRoIiwiZmxvb3IiLCJyYW5kb20iLCJ0YWtlU2NyZWVuc2hvdCIsIm5hbWUiLCJmYWlsdXJlIiwiZm9ybWF0IiwicGF0aCIsImV4aXN0c1N5bmMiLCJta2RpclN5bmMiLCJyZWN1cnNpdmUiLCJyZXBsYWNlIiwiYnJvd3NlciIsInNhdmVTY3JlZW5zaG90IiwiZGF0YSIsInJlYWRGaWxlU3luYyIsImFsbHVyZSIsImFkZEF0dGFjaG1lbnQiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiOztBQUFBLE1BQU1BLEVBQUUsR0FBR0MsT0FBTyxDQUFDLElBQUQsQ0FBbEI7O0FBQ0EsTUFBTUMsTUFBTSxHQUFHRCxPQUFPLENBQUMsUUFBRCxDQUF0Qjs7QUFFQSxNQUFNRSxTQUFOLENBQWdCO0FBQ2QsU0FBT0MsWUFBUCxDQUFvQkMsR0FBcEIsRUFBeUI7QUFDdkIsV0FBT0MsSUFBSSxDQUFDQyxLQUFMLENBQVdELElBQUksQ0FBQ0UsTUFBTCxLQUFnQkYsSUFBSSxDQUFDQyxLQUFMLENBQVdGLEdBQVgsQ0FBM0IsQ0FBUDtBQUNEOztBQUVELFNBQU9JLGNBQVAsQ0FBc0JDLElBQXRCLEVBQTRCQyxPQUFPLEdBQUMsS0FBcEMsRUFBMkM7QUFDekMsUUFBSSxDQUFDRCxJQUFMLEVBQVdBLElBQUksR0FBR1IsTUFBTSxHQUFHVSxNQUFULENBQWdCLG9CQUFoQixDQUFQO0FBQ1gsVUFBTUMsSUFBSSxHQUFHLHNCQUFiOztBQUNBLFFBQUksQ0FBQ2IsRUFBRSxDQUFDYyxVQUFILENBQWNELElBQWQsQ0FBTCxFQUEwQjtBQUN4QmIsTUFBQUEsRUFBRSxDQUFDZSxTQUFILENBQWFGLElBQWIsRUFBbUI7QUFBRUcsUUFBQUEsU0FBUyxFQUFFO0FBQWIsT0FBbkI7QUFDRDs7QUFFRCxRQUFJTCxPQUFKLEVBQWE7QUFDWEQsTUFBQUEsSUFBSSxHQUFHQSxJQUFJLEdBQUcsT0FBZDtBQUNEOztBQUNEQSxJQUFBQSxJQUFJLEdBQUdBLElBQUksQ0FBQ08sT0FBTCxDQUFhLElBQWIsRUFBbUIsR0FBbkIsSUFBMEIsTUFBakM7QUFDQUMsSUFBQUEsT0FBTyxDQUFDQyxjQUFSLENBQXdCTixJQUFJLEdBQUdILElBQS9CO0FBQ0EsVUFBTVUsSUFBSSxHQUFHcEIsRUFBRSxDQUFDcUIsWUFBSCxDQUFpQixHQUFFUixJQUFLLElBQUdILElBQUssRUFBaEMsQ0FBYjtBQUNBWSxJQUFBQSxNQUFNLENBQUNDLGFBQVAsQ0FBcUJiLElBQXJCLEVBQTJCVSxJQUEzQixFQUFpQyxXQUFqQztBQUNEOztBQW5CYTs7QUFzQmhCSSxNQUFNLENBQUNDLE9BQVAsR0FBaUJ0QixTQUFqQiIsInNvdXJjZVJvb3QiOiIvVXNlcnMvbXlraGFpbG8ua3JpdWNoZWsvRG9jdW1lbnRzL1Byb2plY3QvbGVybmluZ1Byb2ovd2ViZHJpdmVyaW8tbW9jaGEtdWlhdXRvbWF0aW9uLWJvaWxlci9zdXBwb3J0L3V0aWxzLyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKTtcbmNvbnN0IG1vbWVudCA9IHJlcXVpcmUoJ21vbWVudCcpO1xuXG5jbGFzcyBVdGlsaXRpZXMge1xuICBzdGF0aWMgZ2V0UmFuZG9tSW50KG1heCkge1xuICAgIHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBNYXRoLmZsb29yKG1heCkpO1xuICB9XG5cbiAgc3RhdGljIHRha2VTY3JlZW5zaG90KG5hbWUsIGZhaWx1cmU9ZmFsc2UpIHtcbiAgICBpZiAoIW5hbWUpIG5hbWUgPSBtb21lbnQoKS5mb3JtYXQoJ1lZWVktTU0tRERUSDptbTpzcycpO1xuICAgIGNvbnN0IHBhdGggPSAnLi9yZXBvcnQvc2NyZWVuc2hvdC8nO1xuICAgIGlmICghZnMuZXhpc3RzU3luYyhwYXRoKSkge1xuICAgICAgZnMubWtkaXJTeW5jKHBhdGgsIHsgcmVjdXJzaXZlOiB0cnVlIH0pO1xuICAgIH1cblxuICAgIGlmIChmYWlsdXJlKSB7XG4gICAgICBuYW1lID0gbmFtZSArICdfZmFpbCc7XG4gICAgfVxuICAgIG5hbWUgPSBuYW1lLnJlcGxhY2UoLyAvZywgJ18nKSArICcucG5nJztcbiAgICBicm93c2VyLnNhdmVTY3JlZW5zaG90KCBwYXRoICsgbmFtZSk7XG4gICAgY29uc3QgZGF0YSA9IGZzLnJlYWRGaWxlU3luYyhgJHtwYXRofS8ke25hbWV9YCk7XG4gICAgYWxsdXJlLmFkZEF0dGFjaG1lbnQobmFtZSwgZGF0YSwgJ2ltYWdlL3BuZycpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gVXRpbGl0aWVzO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "Utilities.js"
      ],
      "names": [
        "fs",
        "require",
        "moment",
        "Utilities",
        "getRandomInt",
        "max",
        "Math",
        "floor",
        "random",
        "takeScreenshot",
        "name",
        "failure",
        "format",
        "path",
        "existsSync",
        "mkdirSync",
        "recursive",
        "replace",
        "browser",
        "saveScreenshot",
        "data",
        "readFileSync",
        "allure",
        "addAttachment",
        "module",
        "exports"
      ],
      "mappings": ";;AAAA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAME,SAAN,CAAgB;AACd,SAAOC,YAAP,CAAoBC,GAApB,EAAyB;AACvB,WAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBF,IAAI,CAACC,KAAL,CAAWF,GAAX,CAA3B,CAAP;AACD;;AAED,SAAOI,cAAP,CAAsBC,IAAtB,EAA4BC,OAAO,GAAC,KAApC,EAA2C;AACzC,QAAI,CAACD,IAAL,EAAWA,IAAI,GAAGR,MAAM,GAAGU,MAAT,CAAgB,oBAAhB,CAAP;AACX,UAAMC,IAAI,GAAG,sBAAb;;AACA,QAAI,CAACb,EAAE,CAACc,UAAH,CAAcD,IAAd,CAAL,EAA0B;AACxBb,MAAAA,EAAE,CAACe,SAAH,CAAaF,IAAb,EAAmB;AAAEG,QAAAA,SAAS,EAAE;AAAb,OAAnB;AACD;;AAED,QAAIL,OAAJ,EAAa;AACXD,MAAAA,IAAI,GAAGA,IAAI,GAAG,OAAd;AACD;;AACDA,IAAAA,IAAI,GAAGA,IAAI,CAACO,OAAL,CAAa,IAAb,EAAmB,GAAnB,IAA0B,MAAjC;AACAC,IAAAA,OAAO,CAACC,cAAR,CAAwBN,IAAI,GAAGH,IAA/B;AACA,UAAMU,IAAI,GAAGpB,EAAE,CAACqB,YAAH,CAAiB,GAAER,IAAK,IAAGH,IAAK,EAAhC,CAAb;AACAY,IAAAA,MAAM,CAACC,aAAP,CAAqBb,IAArB,EAA2BU,IAA3B,EAAiC,WAAjC;AACD;;AAnBa;;AAsBhBI,MAAM,CAACC,OAAP,GAAiBtB,SAAjB",
      "sourceRoot": "/Users/mykhailo.kriuchek/Documents/Project/lerningProj/webdriverio-mocha-uiautomation-boiler/support/utils/",
      "sourcesContent": [
        "const fs = require('fs');\nconst moment = require('moment');\n\nclass Utilities {\n  static getRandomInt(max) {\n    return Math.floor(Math.random() * Math.floor(max));\n  }\n\n  static takeScreenshot(name, failure=false) {\n    if (!name) name = moment().format('YYYY-MM-DDTH:mm:ss');\n    const path = './report/screenshot/';\n    if (!fs.existsSync(path)) {\n      fs.mkdirSync(path, { recursive: true });\n    }\n\n    if (failure) {\n      name = name + '_fail';\n    }\n    name = name.replace(/ /g, '_') + '.png';\n    browser.saveScreenshot( path + name);\n    const data = fs.readFileSync(`${path}/${name}`);\n    allure.addAttachment(name, data, 'image/png');\n  }\n}\n\nmodule.exports = Utilities;\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1620895041601
  }
}